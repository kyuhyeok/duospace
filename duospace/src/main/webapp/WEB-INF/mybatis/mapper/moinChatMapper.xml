<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="moimChat">

	<select id="listFMC" resultType="com.duospace.community.moimchat.MoimChat" parameterType="map">
		SELECT friendNum, name, TO_CHAR(sendDate,'yyyy-MM-dd HH24"시"mi"분"') sendDate, content, unReadCnt FROM(
			SELECT ROWNUM rnum, friendNum, name, sendDate, content, unReadCnt FROM (
				SELECT m.friendNum, name, sendDate, content, unReadCnt FROM (
					SELECT memberNum, friendNum, sendDate, content FROM (
						SELECT memberNum, friendNum, sendDate, content, ROW_NUMBER() OVER(PARTITION BY friendNum ORDER BY sendDate DESC) RANK FROM (
							SELECT memberNum, friendNum, sendDate, content FROM(
								SELECT memberNum, friendNum, sendDate, content, ROW_NUMBER() OVER(PARTITION BY friendNum ORDER BY sendDate DESC) RANK
								FROM messenger
								WHERE memberNum=#{memberNum} AND deleteStatus!=1
							) WHERE rank=1
							UNION ALL
							SELECT memberNum, friendNum, sendDate, content FROM(
								SELECT friendNum memberNum, memberNum friendNum, sendDate, content, ROW_NUMBER() OVER(PARTITION BY memberNum ORDER BY sendDate DESC) RANK
								FROM messenger
								WHERE friendNum=#{memberNum} AND deleteStatus!=2
							) WHERE rank=1
						)
					) WHERE rank=1
				) m
				LEFT OUTER JOIN (
					SELECT memberNum friendNum, NVL(COUNT(*),0) unReadCnt
					FROM messenger
					WHERE friendNum=#{memberNum} AND readDate IS NULL AND deleteStatus!=2
					GROUP BY memberNum
				) c ON m.friendNum=c.friendNum
				JOIN member2 n ON n.memberNum=m.friendNum
				ORDER BY sendDate DESC
				<![CDATA[
			) WHERE ROWNUM<=#{end}
		) WHERE rnum>=#{start}
		]]>
	</select>
	
	<select id="listFMCDataCount" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*),0) FROM(
		    SELECT friendNum FROM messenger
		    WHERE memberNum=#{memberNum} AND deleteStatus!=1
		    GROUP BY friendNum
		) m
		FULL OUTER JOIN (
		    SELECT memberNum friendNum FROM messenger
		    WHERE friendNum=#{memberNum} AND deleteStatus!=2
		    GROUP BY memberNum
		) f ON m.friendNum=f.friendNum
	</select>
	
	<select id="fMURtDCnt" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*),0) unReadCnt
		FROM mchatread
		<where>
			<if test="cmoimCode!=0">
				cmoimCode=#{cmoimCode}
			</if>
			AND readDate IS NULL AND cmoimCode IN (
				SELECT cmoimCode FROM moimmember WHERE memberNum=#{memberNum}
			)
		</where>
	</select>
	
	<insert id="insertFMess" parameterType="com.duospace.community.moimchat.MoimChat">
		insert INTO moimchat (mchatNum, memberNum, cmoimCode, content)
        VALUES(seq_moimchat.NEXTVAL, #{memberNum}, #{cmoimCode}, #{content})
	</insert>
	
	<select id="readFMess" resultType="com.duospace.community.moimchat.MoimChat" parameterType="map">
		<choose>
			<when test="mchatNum==0">
				SELECT mchatNum, memberNum, name, cmoimCode, content, TO_CHAR(sendDate,'yyyy-MM-dd HH24"시"mi"분"') sendDate FROM (
					SELECT mchatNum, memberNum, cmoimCode, content, sendDate, ROW_NUMBER() OVER (ORDER BY sendDate DESC) rank 
					FROM moimchat
					WHERE memberNum=#{memberNum} AND cmoimCode=#{cmoimCode}
				) m
				JOIN member2 m2 ON m.memberNum=m2.memberNum
				WHERE rank=1
			</when>
			<otherwise>
				SELECT mchatNum, memberNum, cmoimCode, content, TO_CHAR(sendDate,'yyyy-MM-dd HH24"시"mi"분"') sendDate
				FROM moimchat
				WHERE mchatNum=#{mchatNum}
			</otherwise>
		</choose>
	</select>
	
	<select id="listMoimMember" resultType="com.duospace.community.moimchat.MoimChat" parameterType="map">
		SELECT memberNum FROM moimmember
		WHERE cmoimCode=#{cmoimCode} AND permission=1
	</select>
	
	<insert id="insertReadMess" parameterType="map">
		insert INTO mchatread (mchatNum, memberNum, cmoimCode)
        VALUES(#{mchatNum}, #{memberNum}, #{cmoimCode})
	</insert>
	
	<select id="listUnReadMess" resultType="com.duospace.community.moimchat.MoimChat" parameterType="map">
		SELECT m.mchatNum, unReadCnt 
		FROM moimchat m
		JOIN mchatread r ON m.mchatNum=r.mchatNum
		JOIN (
			SELECT mchatNum, NVL(COUNT(*),0) unReadCnt
			FROM moimchat
			WHERE reaDate IS NULL AND cmoimNum=#{cmoimNum}
			GROUP BY mchatNum
		) c ON m.mchatNum=c.mchatNum
		WHERE m.cmoimNum=#{cmoimNum} AND r.memberNum=#{memberNum} AND r.reaDate IS NULL
	</select>
	
	<select id="listFMessContent" resultType="com.duospace.community.moimchat.MoimChat" parameterType="map">
		SELECT m.mchatNum, name, content, TO_CHAR(sendDate,'yyyy-MM-dd HH24"시"mi"분"') sendDate, m.memberNum, profile, NVL(unReadCnt,0) unReadCnt FROM (
			<if test="end==10">
			SELECT * FROM (
			</if>
				SELECT mchatNum, content, sendDate, memberNum 
				FROM moimchat
				<where>
					<choose>
						<when test="first!=1 and num!=0">
							<![CDATA[
							mchatNum < #{mchatNum}
							]]>
						</when>
						<when test="first==1 and end==0">
							<![CDATA[
							mchatNum >= (
							]]>
								SELECT mchatNum FROM(
								    SELECT ROW_NUMBER() OVER (ORDER BY sendDate ASC) rank, mchatnum FROM mchatread
								    WHERE readDate IS NULL AND memberNum=#{memberNum} AND cmoimCode=#{cmoimCode}
								) WHERE rank=1
							)
						</when>
					</choose>
					AND cmoimCode=#{cmoimCode}
				</where>
			<if test="end==10">	
				ORDER BY sendDate DESC
				<![CDATA[
			) WHERE ROWNUM <= #{end}
			]]>
			</if>
		) m
		LEFT OUTER JOIN member2 m2 ON m.memberNum=m2.memberNum
		LEFT OUTER JOIN (
			SELECT mchatNum, NVL(COUNT(*),0) unreadcnt
			FROM mchatread
			WHERE cmoimCode=#{cmoimCode} AND readDate IS NULL 
			GROUP BY mchatnum
		) r ON m.mchatNum=r.mchatNum
		<![CDATA[
		WHERE rnum >= #{start}
		]]>
		ORDER BY mchatNum ASC
	</select>
	
	<select id="fMListDataCount" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*),0) FROM (
			SELECT mchatNum
			FROM moimchat
			WHERE cmoimCode=#{cmoimCode}
		)
	</select>
	
	<update id="updateReadDate" parameterType="map">
		UPDATE mchatread SET readDate=SYSDATE
		<where>
			<choose>
				<when test="mchatNum==0">
					readDate IS NUll AND memberNum=#{memberNum} AND cmoimCode=#{cmoimCode}
				</when>
				<otherwise>
					mchatNum=#{mchatNum} AND memberNum=#{memberNum}
				</otherwise>
			</choose>
		</where>
	</update>
	
	<update id="updateFMess" parameterType="map">
		UPDATE messenger SET deleteStatus=#{deleteStatus} WHERE num=#{num}
	</update>
	
	<delete id="deleteFMess" parameterType="map">
		DELETE FROM messenger
		WHERE  
		<where>
			<if test="cmoimCode!=0">
				cmoimCode=#{cmoimCode}
			</if>
			AND memberNum=#{memberNum}
		</where>
	</delete>
</mapper>