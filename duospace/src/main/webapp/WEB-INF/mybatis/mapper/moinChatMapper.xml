<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="moinChat">

	<select id="listFMC" resultType="com.duospace.community.moimchat.MoinChat" parameterType="map">
		SELECT friendNum, name, TO_CHAR(sendDate,'yyyy-MM-dd HH24"시"mi"분"') sendDate, content, unReadCnt FROM(
			SELECT ROWNUM rnum, friendNum, name, sendDate, content, unReadCnt FROM (
				SELECT m.friendNum, name, sendDate, content, unReadCnt FROM (
					SELECT memberNum, friendNum, sendDate, content FROM (
						SELECT memberNum, friendNum, sendDate, content, ROW_NUMBER() OVER(PARTITION BY friendNum ORDER BY sendDate DESC) RANK FROM (
							SELECT memberNum, friendNum, sendDate, content FROM(
								SELECT memberNum, friendNum, sendDate, content, ROW_NUMBER() OVER(PARTITION BY friendNum ORDER BY sendDate DESC) RANK
								FROM messenger
								WHERE memberNum=#{memberNum} AND deleteStatus!=1
							) WHERE rank=1
							UNION ALL
							SELECT memberNum, friendNum, sendDate, content FROM(
								SELECT friendNum memberNum, memberNum friendNum, sendDate, content, ROW_NUMBER() OVER(PARTITION BY memberNum ORDER BY sendDate DESC) RANK
								FROM messenger
								WHERE friendNum=#{memberNum} AND deleteStatus!=2
							) WHERE rank=1
						)
					) WHERE rank=1
				) m
				LEFT OUTER JOIN (
					SELECT memberNum friendNum, NVL(COUNT(*),0) unReadCnt
					FROM messenger
					WHERE friendNum=#{memberNum} AND readDate IS NULL AND deleteStatus!=2
					GROUP BY memberNum
				) c ON m.friendNum=c.friendNum
				JOIN member2 n ON n.memberNum=m.friendNum
				ORDER BY sendDate DESC
				<![CDATA[
			) WHERE ROWNUM<=#{end}
		) WHERE rnum>=#{start}
		]]>
	</select>
	<!-- 
	<sql id="flist">
        SELECT m.friendNum FROM (
            SELECT friendNum FROM gramfriend
            WHERE memberNum=#{memberNum}
		) m
        JOIN (
            SELECT memberNum friendNum FROM gramfriend
            WHERE friendNum=#{memberNum}
		) f ON m.friendNum=f.friendNum
	</sql>
	
	<select id="listFMC" resultType="com.duospace.duogram.fmess.FMess" parameterType="map">
		SELECT friendNum, name, TO_CHAR(sendDate,'yyyy-MM-dd HH24"시"mi"분"') sendDate, content, unReadCnt FROM(
			SELECT ROWNUM rnum, friendNum, name, sendDate, content, unReadCnt FROM (
				SELECT m.friendNum, name, sendDate, content, unReadCnt FROM (
					SELECT memberNum, friendNum, sendDate, content FROM (
						SELECT memberNum, friendNum, sendDate, content, ROW_NUMBER() OVER(PARTITION BY friendNum ORDER BY sendDate DESC) RANK FROM (
							SELECT memberNum, friendNum, sendDate, content FROM(
								SELECT memberNum, friendNum, sendDate, content, ROW_NUMBER() OVER(PARTITION BY friendNum ORDER BY sendDate DESC) RANK
								FROM messenger
								WHERE memberNum=#{memberNum} AND friendNum IN (
									<include refid="flist"/>
								) AND deleteStatus!=1
							) WHERE rank=1
							UNION ALL
							SELECT memberNum, friendNum, sendDate, content FROM(
								SELECT friendNum memberNum, memberNum friendNum, sendDate, content, ROW_NUMBER() OVER(PARTITION BY memberNum ORDER BY sendDate DESC) RANK
								FROM messenger
								WHERE friendNum=#{memberNum} AND memberNum IN (
									<include refid="flist"/>
								) AND deleteStatus!=2
							) WHERE rank=1
						)
					) WHERE rank=1
				) m
				LEFT OUTER JOIN (
					SELECT memberNum friendNum, NVL(COUNT(*),0) unReadCnt
					FROM messenger
					WHERE friendNum=#{memberNum} AND memberNum IN (
						<include refid="flist"/>
					) AND readDate IS NULL AND deleteStatus!=2
					GROUP BY memberNum
				) c ON m.friendNum=c.friendNum
				JOIN member2 n ON n.memberNum=m.friendNum
				ORDER BY sendDate DESC
				<![CDATA[
			) WHERE ROWNUM<=#{end}
		) WHERE rnum>=#{start}
		]]>
	</select>
	 -->
	<select id="listFMCDataCount" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*),0) FROM(
		    SELECT friendNum FROM messenger
		    WHERE memberNum=#{memberNum} AND deleteStatus!=1
		    GROUP BY friendNum
		) m
		FULL OUTER JOIN (
		    SELECT memberNum friendNum FROM messenger
		    WHERE friendNum=#{memberNum} AND deleteStatus!=2
		    GROUP BY memberNum
		) f ON m.friendNum=f.friendNum
	</select>
	<!-- 
	<select id="listFMCDataCount" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*),0) FROM(
		    SELECT friendNum FROM messenger
		    WHERE memberNum=#{memberNum} AND friendNum IN (
		        <include refid="flist"/>
		    ) AND deleteStatus!=1
		    GROUP BY friendNum
		) m
		FULL OUTER JOIN (
		    SELECT memberNum friendNum FROM messenger
		    WHERE friendNum=#{memberNum} AND memberNum IN (
		        <include refid="flist"/>
		    ) AND deleteStatus!=2
		    GROUP BY memberNum
		) f ON m.friendNum=f.friendNum
	</select>
	 -->
	<select id="fMURtDCnt" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*),0) totUnReadCnt
		FROM messenger
		<where>
			<if test="friendNum!=0">
				memberNum=#{friendNum}
			</if>
			AND readDate IS NULL AND friendNum=#{memberNum} AND deleteStatus!=1 AND memberNum IN (
				SELECT memberNum FROM mygram
			)
		</where>
	</select>
	
	<select id="readFMess" resultType="com.duospace.community.moimchat.MoinChat" parameterType="map">
		<choose>
			<when test="num==0">
				SELECT num, m.memberNum, friendNum, TO_CHAR(sendDate,'yyyy-MM-dd HH24"시"mi"분"') sendDate, content, proFileSaveFileName FROM (
					SELECT num, memberNum, friendNum, sendDate, content, ROW_NUMBER() OVER (ORDER BY sendDate DESC) rank 
					FROM messenger
					WHERE memberNum=#{memberNum} AND friendNum=#{friendNum}
				) m LEFT OUTER JOIN mygram g ON m.friendNum=g.memberNum
				WHERE rank=1
			</when>
			<otherwise>
				SELECT num, memberNum, friendNum, TO_CHAR(sendDate,'yyyy-MM-dd HH24"시"mi"분"') sendDate, readDate, deleteStatus, content
				FROM messenger
				WHERE num=#{num}
			</otherwise>
		</choose>
	</select>
	
	<sql id="fMesslist">
        SELECT num, friendNum, sendDate, content, readDate FROM messenger
        WHERE memberNum=#{memberNum} AND friendNum=#{friendNum} AND deleteStatus!=1
        UNION ALL
        SELECT num, friendNum, sendDate, content, readDate FROM messenger
        WHERE friendNum=#{memberNum} AND memberNum=#{friendNum} AND deleteStatus!=2
	</sql>
	
	<insert id="insertFMess" parameterType="com.duospace.community.moimchat.MoinChat">
		insert INTO messenger (num, memberNum, friendNum, content)
        VALUES(seq_messenger.NEXTVAL, #{memberNum}, #{friendNum}, #{content})
	</insert>
	
	<select id="listFMessContent" resultType="com.duospace.community.moimchat.MoinChat" parameterType="map">
		SELECT num, friendNum, TO_CHAR(sendDate,'yyyy-MM-dd HH24"시"mi"분"') sendDate, content, proFileSaveFileName, readDate FROM (
			SELECT num, friendNum, sendDate, content, proFileSaveFileName, readDate FROM (
				<if test="end==10">
				SELECT * FROM (
				</if>
					SELECT * FROM (
						<include refid="fMesslist"/>
					) 
					<where>
						<if test="first!=1 and num!=0 ">
							num lt #{num}
						</if>
						<if test="first==1 and end==0">
							num ge (
								SELECT num FROM(
								    SELECT ROW_NUMBER() OVER (ORDER BY sendDate ASC) rank, num FROM messenger
								    WHERE readDate IS NULL AND memberNum=#{friendNum} AND friendNum=#{memberNum}
								) WHERE rank=1
							)
						</if>
					</where>
				<if test="end==10">
					ORDER BY sendDate DESC
					<![CDATA[
				) WHERE ROWNUM <= #{end}
				]]>
				</if>
			) m
			LEFT OUTER JOIN mygram g ON m.friendNum=g.memberNum
			ORDER BY sendDate ASC
		)
	</select>
	
	<select id="fMListDataCount" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*),0) FROM (
			SELECT num FROM messenger
	        WHERE memberNum=#{memberNum} AND friendNum=#{friendNum} AND deleteStatus!=1
	        UNION ALL
	        SELECT num FROM messenger
	        WHERE friendNum=#{memberNum} AND memberNum=#{friendNum} AND deleteStatus!=2
		)
		<where>
			<if test="num!=0">
				num lt #{num}
			</if>
		</where>
	</select>
	
	<update id="updateReadDate" parameterType="map">
		UPDATE messenger SET readDate=SYSDATE
		<where>
			<choose>
				<when test="num=0">
					readDate IS NUll AND memberNum=#{friendNum} AND friendNum=#{memberNum}
				</when>
				<otherwise>
					num=#{num}
				</otherwise>
			</choose>
		</where>
	</update>
	
	<update id="updateFMess" parameterType="map">
		UPDATE messenger SET deleteStatus=#{deleteStatus} WHERE num=#{num}
	</update>
	
	<delete id="deleteFMess" parameterType="map">
		DELETE FROM messenger
		WHERE num=#{num}
	</delete>
</mapper>